<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on XingSo&#39;s Blog</title>
    <link>http://xingso.github.io/posts/</link>
    <description>Recent content in Posts on XingSo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2015–2020, XingSo; All rights reserved.</copyright>
    <lastBuildDate>Tue, 10 Dec 2019 16:11:00 +0800</lastBuildDate>
    
	<atom:link href="http://xingso.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring常用注解</title>
      <link>http://xingso.github.io/posts/dev/backend/java/spring/%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Tue, 10 Dec 2019 16:11:00 +0800</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/java/spring/%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</guid>
      <description>返回的JSON忽略某字段 在这个字段的get方法上加上@JsonIgnore @JsonIgnore public String getPassword() { return password; }</description>
    </item>
    
    <item>
      <title>VSCode常用插件</title>
      <link>http://xingso.github.io/posts/dev/frontend/vscode%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Thu, 20 Dec 2018 20:18:33 +0800</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/frontend/vscode%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</guid>
      <description>EsLint —— 语法纠错 Auto Close Tag —— 自动闭合HTML/XML标签 Auto Rename Tag —— 自动完成另一侧标签的同步修改 JavaScript(ES6) code snippets —— ES6语法智能提示以及快速输入 Path Intellisense —— 自</description>
    </item>
    
    <item>
      <title>IDEA常用插件</title>
      <link>http://xingso.github.io/posts/dev/backend/java/idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Sat, 10 Nov 2018 16:45:00 +0800</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/java/idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</guid>
      <description>CamelCase 自动转换驼峰命名，首字母大写命名，快捷键alt+shift+u free-mybatis mybatis 辅助插件</description>
    </item>
    
    <item>
      <title>iOS文件操作</title>
      <link>http://xingso.github.io/posts/dev/ios/ios%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 10 Nov 2015 14:11:00 +0800</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/ios/ios%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>iOS中文件目录的结构 我们的app在手机中存放的路径是：/var/mobile/Applications/4434-4453A-B453-4</description>
    </item>
    
    <item>
      <title>iOS日期处理</title>
      <link>http://xingso.github.io/posts/dev/ios/ios%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/ios/ios%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</guid>
      <description>G: 公元时代，例如AD公元 yy: 年的后2位 yyyy: 完整年 MM: 月，显示为1-12 MMM: 月，显示为英文月份简写,如 Jan MMMM: 月，显示为英文月份全称，如 Janualy dd: 日，2位数表示</description>
    </item>
    
    <item>
      <title>Mybatis关联查询</title>
      <link>http://xingso.github.io/posts/dev/backend/db/mybatis/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/db/mybatis/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/</guid>
      <description>方案一（只查询一次，程序组装数据） 通过 resultMap 例如 record中的tags子对象 &amp;lt;resultMap id=&amp;quot;accountRecordMap&amp;quot; type=&amp;quot;com.doomou.xshome.Entitys.finance.AccountRecord&amp;quot;&amp;gt; &amp;lt;id column=&amp;quot;id&amp;quot; property=&amp;quot;id&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;name&amp;quot; property=&amp;quot;name&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;price&amp;quot; property=&amp;quot;price&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;time&amp;quot; property=&amp;quot;time&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;operator&amp;quot; property=&amp;quot;operator&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;location&amp;quot; property=&amp;quot;location&amp;quot;/&amp;gt; &amp;lt;result column=&amp;quot;is_no_budget&amp;quot; property=&amp;quot;isNoBudget&amp;quot;/&amp;gt; &amp;lt;collection property=&amp;quot;tags&amp;quot; column=&amp;quot;id&amp;quot; ofType=&amp;quot;com.doomou.xshome.Entitys.common.TagEntity&amp;quot; &amp;gt; &amp;lt;id column=&amp;quot;tid&amp;quot; property=&amp;quot;id&amp;quot;/&amp;gt; &amp;lt;result</description>
    </item>
    
    <item>
      <title>Mybatis获取插入ID的两种方法</title>
      <link>http://xingso.github.io/posts/dev/backend/db/mybatis/%E8%8E%B7%E5%8F%96%E6%8F%92%E5%85%A5id%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/db/mybatis/%E8%8E%B7%E5%8F%96%E6%8F%92%E5%85%A5id%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>方法一： &amp;lt;insert id=&amp;quot;insert&amp;quot; parameterType=&amp;quot;com.xxx.xxxx.pojo.User&amp;quot;&amp;gt; insert into t_user (name) values (#{user.name}) &amp;lt;selectKey resultType=&amp;quot;Integer&amp;quot; order=&amp;quot;AFTER&amp;quot; keyProperty=&amp;quot;user.userId&amp;quot;&amp;gt; SELECT LAST_INSERT_ID() AS userId &amp;lt;/selectKey&amp;gt; &amp;lt;/insert&amp;gt; 方法二（常用）： &amp;lt;insert id=&amp;quot;insert&amp;quot; parameterType=&amp;quot;Spares&amp;quot; useGeneratedKeys=&amp;quot;true&amp;quot; keyProperty=&amp;quot;id&amp;quot;&amp;gt; insert into system(name) values(#{name}) &amp;lt;/insert&amp;gt; 然后在调用的时候就可以用插入对象的id属性来获取了。</description>
    </item>
    
    <item>
      <title>MySQL5.6配置</title>
      <link>http://xingso.github.io/posts/dev/backend/db/mysql/mysql5.6%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/db/mysql/mysql5.6%E9%85%8D%E7%BD%AE/</guid>
      <description>1.配置文件 My.ini 路径 在services里面可以看到。默认为：&amp;ldquo;C:\ProgramData\MySQL\MySQL Server 5.6\my.ini&amp;rdquo;</description>
    </item>
    
    <item>
      <title>MySQL常用命令</title>
      <link>http://xingso.github.io/posts/dev/backend/db/mysql/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/backend/db/mysql/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>1.用户 1.添加用户 命令: CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;; 例子: CREATE USER &#39;dog&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;; CREATE USER &#39;dog2&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#39;; PS：username - 你将创建的用户名, host - 指定该用户在哪个主机上可以</description>
    </item>
    
    <item>
      <title>StatusBar相关操作</title>
      <link>http://xingso.github.io/posts/dev/ios/statusbar%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/ios/statusbar%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</guid>
      <description>1. 修改颜色 第一步：修改info.plist，增加一个属性View controller-based status bar appearance，值是Boolean类型的NO。 第二步：在要改变颜</description>
    </item>
    
    <item>
      <title>UITableView相关操作</title>
      <link>http://xingso.github.io/posts/dev/ios/uitableview%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/ios/uitableview%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</guid>
      <description>1.UITableViewCell的高度自适应 1.必须指定自动高度的估计 _tableView.estimatedRowHeight = 44; 2.返回高度 - (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{ return UITableViewAutomaticDimension; } 3.添加能撑开cell的约束</description>
    </item>
    
    <item>
      <title>Vue上拉加载更多</title>
      <link>http://xingso.github.io/posts/dev/frontend/vue/%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/frontend/vue/%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A/</guid>
      <description>大致思路是先写一个上拉加载更多子组件，需要用上拉加载更多的父页面再调用这个子组件。 子组件中用onScroll监听鼠标事件，纵向滚动轴滑到底部</description>
    </item>
    
    <item>
      <title>Vue动态添加input</title>
      <link>http://xingso.github.io/posts/dev/frontend/vue/%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xingso.github.io/posts/dev/frontend/vue/%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0input/</guid>
      <description>点击按钮的时候，新增一个文本框，同时绑定事件，在改变的时候，输出值就好了 &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; v-for=&amp;quot;(item,i) of items&amp;quot; v-model=&amp;quot;items[i]&amp;quot; :key=&amp;quot;i&amp;quot;&amp;gt; &amp;lt;button @click=&amp;quot;onAdd&amp;quot;</description>
    </item>
    
  </channel>
</rss>